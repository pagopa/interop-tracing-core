name: PR validation

on:
  pull_request:

jobs:
  formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4
        with:
          node-version-file: ./package.json
      - uses: pnpm/action-setup@v4
        with:
          run_install: true
      - run: pnpm format:check

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4
        with:
          node-version: 20
      - uses: pnpm/action-setup@v3
        with:
          run_install: true
      - run: pnpm lint

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4
        with:
          node-version-file: ./package.json
      - uses: pnpm/action-setup@v4
        with:
          run_install: true
      - run: pnpm check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4
        with:
          node-version-file: ./package.json
      - uses: pnpm/action-setup@v4
        with:
          run_install: true
      - run: pnpm test

  find_dockerfiles:
    name: Find Dockerfiles
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.set_packages_output.outputs.packages }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Find packages
        id: set_packages_output
        run: |
          PACKAGES=$(find packages -type f -path "*/Dockerfile" | awk -F'/' '{print $2}' | jq -R -s -c 'split("\n")[:-1]')
          echo "packages=$PACKAGES" >> $GITHUB_OUTPUT

  docker_build:
    name: Build
    needs: [find_dockerfiles]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.find_dockerfiles.outputs.packages) }}
    env:
        DOCKER_BUILD_SUMMARY: "false"
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Build Docker image
        uses: docker/build-push-action@a8d35412fb758de9162fd63e3fa3f0942bdedb4d
        with:
          context: .
          file: packages/${{ matrix.package }}/Dockerfile
          push: false
    
  check_build_result:
    name: Build Result
    needs: [docker_build]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Check build result
        run: |
          [[ ${{ needs.docker_build.result }} != 'success' ]] && exit 1
          exit 0
